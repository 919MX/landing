#!/bin/sh
upstream api_production {
  server 127.0.0.1:8000 weight=5 max_fails=3 fail_timeout=30s;
  # use 127.0.0.1 if api lives on same server as webserver
}


# redirect requests to `http://www.<website_url>` to `https://<website_url>`
server {
  listen 80;
  server_name www.719s.mx;

  # let's encrypt bot validates file that we generate at this path with http request
  location /.well-known/ {
    root /usr/share/nginx/html;
  }

  location / {
    return 301 https://719s.mx$request_uri;
  }
}

# redirect requests to `https://www.<website_url>` to `https://<website_url>`
server {
  listen 443;
  server_name www.719s.mx;
  ssl on;
  ssl_certificate /etc/letsencrypt/live/719s.mx/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/719s.mx/privkey.pem;

  return 301 https://719s.mx$request_uri;
}

# redirect requests to `http://<website_url>` to `https://<website_url>`
server {
  listen 80;
  server_name 719s.mx;

  # let's encrypt bot validates file that we generate at this path with http request
  location /.well-known/ {
    root /usr/share/nginx/html;
  }

  location / {
    return 301 https://719s.mx$request_uri;
  }
}


# the main server block that catches requests to `https://<website_url>`
server {
  set $root /var/www/919/web;

  client_max_body_size 50M;
  listen 443;
  server_name 719s.mx;
  access_log /var/log/nginx/production-access.log;
  error_log /var/log/nginx/production-error.log;

  ssl on;
  ssl_certificate /etc/letsencrypt/live/719s.mx/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/719s.mx/privkey.pem;

  proxy_intercept_errors on; # enables nginx to serve custom error pages

  # certbot folder -.well-known- will be created here
  location /.well-known/ {
    root /usr/share/nginx/html;
  }

  # all petitions are served static content
  location / {
    root $root/html;
    index index.html index.htm;
    rewrite ^/mapa$ /map.html;
    rewrite ^/mapa/$ /map.html;
  }

  location /styles/ {
    root $root;
  }

  location /assets/ {
    root $root;
  }

  location /js/ {
    root $root;
  }

  # except for petitions to API, which are proxied to API servers
  location /api/ {
    # make sure nginx doesn't intercept JSON error responses from API and replace them with HTML
    proxy_intercept_errors off;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_read_timeout 300s;
    proxy_pass http://api_production;
  }
}
